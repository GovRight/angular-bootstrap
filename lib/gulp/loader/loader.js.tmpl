(function() {
  'use strict';

  var ngAppName =  '<%= appName %>';
  window.GovrightApps = window.GovrightApps || {
    incrementId: 0,
    loaded: {}
  };

  var currentScript = document.scripts[document.scripts.length -1];
  var parentNode = currentScript.parentNode;

  if(!window.GovrightApps.loaded[ngAppName]) {
    var styles = <%= styles %>;
    var scripts = <%= scripts %>;
    var head = document.getElementsByTagName('head')[0];
    var appUrl = currentScript.src.split('?').shift().replace('loader.js', '');

    // Inject styles
    styles.forEach(function(styleUri) {
      var style = document.createElement('link');
      style.type = 'text/css';
      style.rel = 'stylesheet';
      if(styleUri[0] === '/') {
        styleUri = styleUri.substr(1);
      }
      style.href = appUrl + styleUri;
      head.appendChild(style);
    });

    // Inject scripts
    scripts.forEach(function(scriptUri) {
      // Loose check if it's an external script
      if(scriptUri.indexOf('http') !== 0 && scriptUri.indexOf('//') !== 0) {
        if(scriptUri[0] === '/') {
          scriptUri = scriptUri.substr(1);
        }
        scriptUri = appUrl + scriptUri;
      }
      document.write('<script src="' + scriptUri + '"></script>');
    });
    window.GovrightApps.loaded[ngAppName] = true;
  }

  // Inject app container
  var container = document.createElement('div');
  var containerId = 'govright-app-root-' + window.GovrightApps.incrementId;
  container.innerHTML = '<div ui-view></div>';
  container.id = containerId;
  container.className = 'govright-app-root';
  // Copy custom data attributes like law-slug to the container
  [].forEach.call(currentScript.attributes, function(attr) {
    if(/^data-/.test(attr.name)) {
      container.setAttribute(attr.name, attr.value);
    }
  });
  parentNode.appendChild(container);

  document.addEventListener('DOMContentLoaded', function() {
    angular.bootstrap(document.getElementById(containerId), [ngAppName]);
  });

  window.GovrightApps.incrementId++;
}());
